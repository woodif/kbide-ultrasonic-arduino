<xml xmlns="http://www.w3.org/1999/xhtml"><variables><variable type="Plugin.Ultrasonic" id="hrN,b8gq4ADHdCAlHypO">ultrasonic1</variable></variables><block type="arduino_init" id="K8eY*IbI:9DdXe#a{YKR" deletable="false" x="-237" y="-87"><statement name="code"><block type="serial_usb_init" id="QI-n.PtDF^M?{|epPObK"><field name="baudrate">115200</field><next><block type="ultrasonic_setup" id="$fav7a~gihXc/N~8xSgW"><field name="instance" id="hrN,b8gq4ADHdCAlHypO" variabletype="Plugin.Ultrasonic">ultrasonic1</field><field name="ECHO">18</field><field name="TRIG">19</field></block></next></block></statement></block><block type="arduino_loop" id="FmX*nA1U309tQ#9qt/zZ" deletable="false" x="-238" y="88"><statement name="code"><block type="serial_write_data" id="[9AwlogICEB|1+3TgB+O"><field name="type">Serial</field><field name="newline">TRUE</field><value name="text"><shadow type="basic_string" id="2Llj#i*%I1rY!yk3+3]B"><field name="VALUE">Hello world!</field></shadow><block type="ultrasonic_read_distance_cm" id="5$$3l-w};TzvZQ;JqWV."><field name="instance" id="hrN,b8gq4ADHdCAlHypO" variabletype="Plugin.Ultrasonic">ultrasonic1</field></block></value><next><block type="time_delay" id="n_ozw*jgj{4NknebJwm%"><value name="delay"><shadow type="math_number" id="2u0L~EdaOHtB8PHT`rG3"><field name="NUM">1000</field></shadow></value></block></next></block></statement></block></xml>